<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mlec.notice">

	<resultMap type="NoticeVO" id="noticeMap">
		<result column="view_cnt" property="viewCnt"/>
		<result column="register_date" property="registerDate"/>
	</resultMap>
	
	<select id="selectAllNotice" resultMap="noticeMap" parameterType="hashmap">
		<![CDATA[
		select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
		from (select rownum r, b.* from( select a.* from d_notice a order by no desc) b )
		where r>= #{start} and r <= #{end}
		]]>
	</select>
	
	<insert id="insertNotice" parameterType="noticeVO">
		insert into d_notice(no, title, content, writer)
		values(d_notice_seq.nextval, #{title}, #{content}, '1')
	</insert>
	
	<select id= "selectCountNotice" resultType="int">
		select count(*) count
		from d_notice
	</select>
	
	
	<select id="selectByNoNotice" resultMap="noticeMap" parameterType="int">
		select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
		from d_notice
		where no = #{no}
	</select>
	
	<delete id="deleteNotice" parameterType="int">
		delete from d_notice
		where no = #{no}
	</delete>
	
	<update id="updateNotice" parameterType="noticeVO">
		update d_notice
		set title=#{title}, content=#{content}
		where no = #{no}
	</update>
	
	<update id="updateViewCnt" parameterType="int">
		update d_notice
		set view_cnt = view_cnt+1
		where no = #{no}
	</update>
	
	<select id="selectSearchNotice" resultMap="noticeMap" parameterType="hashmap">
		<choose>
			<when test= 'type.equals("all")'>
			<![CDATA[
			select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
			from (select rownum r, b.* from( select a.* from d_notice a 
			where title like '%'||#{word}||'%' or content like '%'||#{word}||'%' or writer like '%'||#{word}||'%'  order by no desc) b )
			where r>= #{start} and r <= #{end} 
			]]>
			</when>
			<when test= 'type.equals("title")'>
			<![CDATA[
			select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
			from (select rownum r, b.* from( select a.* from d_notice a where title like '%'||#{word}||'%' order by no desc) b )
			where r>= #{start} and r <= #{end} 
			]]>
			</when>
			<when test='type.equals("content")'>
			<![CDATA[
			select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
			from (select rownum r, b.* from( select a.* from d_notice a where content like '%'||#{word}||'%' order by no desc) b )
			where r>= #{start} and r <= #{end}
			]]>
			</when>
			<when test='type.equals("writer")'>
			<![CDATA[
			select no, title, content, writer, view_cnt, to_char(register_date, 'yyyy-mm-dd') as register_date
			from (select rownum r, b.* from( select a.* from d_notice a where writer like '%'||#{word}||'%' order by no desc) b )
			where r>= #{start} and r <= #{end}
			]]>
			</when>
		</choose> 
	</select>
	
	<select id="selectSearchCountNotice" resultType="int" parameterType="hashmap">
	<choose>
			<when test= 'type.equals("all")'>
			<![CDATA[
			select count(*) count
			from (select rownum r, b.* from( select a.* from d_notice a 
			where title like '%'||#{word}||'%' or content like '%'||#{word}||'%' or writer like '%'||#{word}||'%'  order by no desc) b )
			]]>
			</when>
			<when test= 'type.equals("title")'>
			<![CDATA[
			select count(*) count
			from (select rownum r, b.* from( select a.* from d_notice a where title like '%'||#{word}||'%' order by no desc) b )
			]]>
			</when>
			<when test='type.equals("content")'>
			<![CDATA[
			select count(*) count
			from (select rownum r, b.* from( select a.* from d_notice a where content like '%'||#{word}||'%' order by no desc) b )
			]]>
			</when>
			<when test='type.equals("writer")'>
			<![CDATA[
			select count(*) count
			from (select rownum r, b.* from( select a.* from d_notice a where writer like '%'||#{word}||'%' order by no desc) b )
			]]>
			</when>
		</choose> 
	</select>
	
</mapper>